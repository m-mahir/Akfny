//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Data.Entities
{
    using Data.ViewModels;
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;

    public partial class CourseProffer : Entity<int>
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public CourseProffer()
        {
            this.CSLocations = new HashSet<CSLocation>();
            this.CSLocation_Temp = new HashSet<CSLocation_Temp>();
            this.RegistrationCourseProffers = new HashSet<RegistrationCourseProffer>();
            this.SelectedLecturers = new HashSet<SelectedLecturer>();
            this.SelectedLecturerTemps = new HashSet<SelectedLecturerTemp>();
            this.TaskProgresses = new HashSet<TaskProgress>();
            this.TrainerInquiries = new HashSet<TrainerInquiry>();
        }
        
        public int? LecturerId { get; set; }
        public virtual Lecturer Lecturer { get; set; }

        public int? CourseId { get; set; }
        public virtual Course Course { get; set; }

        public decimal? Price { get; set; }
        public int? NumberOfTrainees { get; set; }
        public string Location { get; set; }
        public string TimeFrom { get; set; }
        public string TimeTo { get; set; }
        public int? ReviewJawwal { get; set; }
        public int? StatusId { get; set; }
        public string Note { get; set; }
        public string CreatDate { get; set; }
        public string CreatTime { get; set; }
        public string AcceptRejectDate { get; set; }
        public string AcceptRejectTime { get; set; }
        public int? PriceId { get; set; }
        public string AcceptRejectNote { get; set; }
        public int? CountryId { get; set; }
        public virtual Country Country { get; set; }

        public int? CityId { get; set; }
        public virtual City City { get; set; }

        public int? locId { get; set; }
        public int? coordinatorId { get; set; }
        public virtual Coordinator Coordinator { get; set; }

        public string coordinatorDate { get; set; }
        public string coordinatorTime { get; set; }
        public bool? coordinatorSubmit { get; set; }
        public string TimeFrom2 { get; set; }
        public decimal? LocPrice { get; set; }
        public string coordinatorNote { get; set; }
        public int? FinanceId { get; set; }
        public virtual Finance Finance { get; set; }
        public string FinanceDate { get; set; }
        public string FinanceTime { get; set; }
        public bool? FinanceSubmit { get; set; }
        public decimal? PriceTrainer { get; set; }
        public int? CurrencyId { get; set; }
        public virtual Currency Currency { get; set; }
        public int? CurrencyId1 { get; set; }
        public virtual Currency Currency1 { get; set; }
        public string FinanceNote { get; set; }
        public decimal? TotalPrice { get; set; }
        public int? PMPId { get; set; }
        public virtual PMP PMP { get; set; }
        public string PMPDate { get; set; }
        public string PMPTime { get; set; }
        public bool? PMPSubmit { get; set; }
        public string PMPNote { get; set; }
        public DateTime SuggestedDate { get; set; }
        public bool? GMSubmit { get; set; }
        public int? GMId { get; set; }
        public virtual GM GM { get; set; }
        public bool? ForwardCoordinator { get; set; }
        public string ForwardCoordinatorType { get; set; }
        public int? ForwardCoordinatorId { get; set; }
        public string ForwardCoordinatorNote { get; set; }
        public string ForwardCoordinatorDateTime { get; set; }
        public bool? ForwardFinance { get; set; }
        public string ForwardFinanceType { get; set; }
        public int? ForwardFinanceId { get; set; }
        public string ForwardFinanceNote { get; set; }
        public string ForwardFinanceDateTime { get; set; }
        public bool? ForwardPMP { get; set; }
        public string ForwardPMPType { get; set; }
        public int? ForwardPMPId { get; set; }
        public string ForwardPMPNote { get; set; }
        public string ForwardPMPDateTime { get; set; }
        public string CP { get; set; }
        public bool? CS_Finish { get; set; }
        public byte[] Brochures { get; set; }
        public int? RoomId { get; set; }
        public bool? HasLec { get; set; }
        public int? CoordinatorLocationId { get; set; }
        public virtual CoordinatorLocation CoordinatorLocation { get; set; }
  
        
        public int? PriceTypeId { get; set; }
        public virtual PriceType PriceType { get; set; }
        public virtual ProfferStatu ProfferStatu { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<CSLocation> CSLocations { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<CSLocation_Temp> CSLocation_Temp { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<RegistrationCourseProffer> RegistrationCourseProffers { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SelectedLecturer> SelectedLecturers { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SelectedLecturerTemp> SelectedLecturerTemps { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<TaskProgress> TaskProgresses { get; set; }
        public int? ProviderId { get; set; }
        public virtual Provider Provider { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<TrainerInquiry> TrainerInquiries { get; set; }
        public int? LocationRoomId { get; set; }
        public virtual LocationRoom LocationRoom { get; set; }
    }
}
